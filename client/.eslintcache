[{"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/index.js":"1","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/actions/users.actions.js":"2","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/App.js":"3","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/reducers/index.js":"4","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/actions/user.actions.js":"5","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/AppContext.js":"6","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/reducers/users.reducer.js":"7","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/reducers/user.reducer.js":"8","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/reducers/post.reducer.js":"9","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Routes/index.js":"10","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/actions/post.actions.js":"11","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Navbar.js":"12","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/pages/Trending.js":"13","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/pages/Profil.js":"14","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/pages/Home.js":"15","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Log/Logout.js":"16","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/LeftNav.js":"17","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Profil/UploadImg.js":"18","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Thread.js":"19","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Profil/UpdateProfil.js":"20","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Log/index.js":"21","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Utils.js":"22","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Profil/FollowHandler.js":"23","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Post/Card.js":"24","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Log/SignUpForm.js":"25","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Log/SignInForm.js":"26","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Post/DeletePost.js":"27","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Post/PostComments.js":"28","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Post/LikeButton.js":"29"},{"size":640,"mtime":1608627201887,"results":"30","hashOfConfig":"31"},{"size":375,"mtime":1608637547144,"results":"32","hashOfConfig":"31"},{"size":1024,"mtime":1609328073330,"results":"33","hashOfConfig":"31"},{"size":252,"mtime":1608710746475,"results":"34","hashOfConfig":"31"},{"size":2354,"mtime":1608636181039,"results":"35","hashOfConfig":"31"},{"size":84,"mtime":1607933466306,"results":"36","hashOfConfig":"31"},{"size":263,"mtime":1608627201888,"results":"37","hashOfConfig":"31"},{"size":977,"mtime":1608633904170,"results":"38","hashOfConfig":"31"},{"size":1480,"mtime":1609491625577,"results":"39","hashOfConfig":"31"},{"size":668,"mtime":1607940768461,"results":"40","hashOfConfig":"31"},{"size":2302,"mtime":1609491400746,"results":"41","hashOfConfig":"31"},{"size":1547,"mtime":1608036631601,"results":"42","hashOfConfig":"31"},{"size":151,"mtime":1607501285711,"results":"43","hashOfConfig":"31"},{"size":778,"mtime":1608112143831,"results":"44","hashOfConfig":"31"},{"size":330,"mtime":1608709745088,"results":"45","hashOfConfig":"31"},{"size":781,"mtime":1607950397784,"results":"46","hashOfConfig":"31"},{"size":929,"mtime":1608037247452,"results":"47","hashOfConfig":"31"},{"size":1047,"mtime":1608113249562,"results":"48","hashOfConfig":"31"},{"size":1445,"mtime":1609241705944,"results":"49","hashOfConfig":"31"},{"size":5710,"mtime":1609328310627,"results":"50","hashOfConfig":"31"},{"size":1212,"mtime":1607501285708,"results":"51","hashOfConfig":"31"},{"size":641,"mtime":1608629027346,"results":"52","hashOfConfig":"31"},{"size":1641,"mtime":1608718008172,"results":"53","hashOfConfig":"31"},{"size":5079,"mtime":1609492824977,"results":"54","hashOfConfig":"31"},{"size":4375,"mtime":1607936751144,"results":"55","hashOfConfig":"31"},{"size":1725,"mtime":1607935553406,"results":"56","hashOfConfig":"31"},{"size":543,"mtime":1609491876355,"results":"57","hashOfConfig":"31"},{"size":163,"mtime":1609492865710,"results":"58","hashOfConfig":"31"},{"size":1642,"mtime":1609240148672,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"le49ai",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/index.js",[],["123","124"],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/actions/users.actions.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/App.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/reducers/index.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/actions/user.actions.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/AppContext.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/reducers/users.reducer.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/reducers/user.reducer.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/reducers/post.reducer.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Routes/index.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/actions/post.actions.js",["125"],"import axios from \"axios\";\nimport {logger} from \"redux-logger/src\";\n\n\nexport const GET_POSTS = \"GET_POSTS\";\nexport const LIKE_POST = \"LIKE_POST\";\nexport const UNLIKE_POST = \"UNLIKE_POST\";\nexport const UPDATE_POST = \"UPDATE_POST\";\nexport const DELETE_POST = \"DELETE_POST\";\n\n\nexport const getPosts = (count) => {\n    return (dispatch) => {\n        return axios.get(`${process.env.REACT_APP_API_URL}api/post/`)\n            .then((res) => {\n                const arrayOfPosts = res.data.slice(0, count);\n                dispatch({type: GET_POSTS, payload: arrayOfPosts});\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    };\n};\n\n\nexport const likePost = (postId, userId) => {\n    return (dispatch) => {\n        return axios({\n            method: 'patch',\n            url: `${process.env.REACT_APP_API_URL}api/post/like-post` + postId,\n            data: {id: userId}\n        })\n            .then((res) => {\n                dispatch({type: LIKE_POST, payload: {postId, userId}});\n            })\n            .catch((err) => console.log(err));\n    };\n};\n\n\nexport const unlikePost = (postId, userId) => {\n    return (dispatch) => {\n        return axios({\n            method: 'patch',\n            url: `${process.env.REACT_APP_API_URL}api/post/like-post` + postId,\n            data: {id: userId}\n        })\n            .then((res) => {\n                dispatch({type: UNLIKE_POST, payload: {postId, userId}});\n            })\n            .catch((err) => console.log(err));\n    };\n};\n\nexport const updatePost = (postId, message) => {\n    return (dispatch) => {\n        return axios({\n            method: 'put',\n            url: `${process.env.REACT_APP_API_URL}api/post/${postId}`,\n            data: {message}\n        })\n            .then((res) => {\n                dispatch({type: UPDATE_POST, payload: {message, postId}});\n            })\n            .catch((err) => console.log(err));\n    };\n};\n\n\nexport const deletePost = (postId) => {\n    return (dispatch) => {\n        return axios({\n            method: 'delete',\n            url: `${process.env.REACT_APP_API_URL}api/post/${postId}`\n        })\n            .then((res) => {\n                dispatch({type: DELETE_POST, payload: {postId}});\n            })\n            .catch((err) => console.log(err));\n    };\n};","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Navbar.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/pages/Trending.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/pages/Profil.js",["126"],"import React, {useContext} from 'react';\nimport Log from \"../components/Log\";\nimport {UserIdContext} from \"../components/AppContext\";\nimport UpdateProfil from \"../components/Profil/UpdateProfil\";\nimport UploadImg from \"../components/Profil/UploadImg\";\n\n\nconst Profil = () => {\n    const userId = useContext(UserIdContext);\n    return (\n        <div className=\"profil-page\">\n            {userId ? (\n                <UpdateProfil/>\n            ) : (\n                <div className=\"log-container\">\n                    <Log signin={false} signup={true}/>\n                    <div className=\"img-container\">\n                        <img src=\"./img/log.svg\" alt=\"log\"/>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Profil;","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/pages/Home.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Log/Logout.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/LeftNav.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Profil/UploadImg.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Thread.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Profil/UpdateProfil.js",["127","128"],"import React, {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {updateBio} from \"../../actions/user.actions\";\nimport LeftNav from \"../LeftNav\";\nimport {dateParser} from \"../Utils\";\nimport UploadImg from \"./UploadImg\";\nimport FollowHandler from \"./FollowHandler\";\n\nconst UpdateProfil = () => {\n    const [bio, setBio] = useState(\"\");\n    const [updateForm, setUpdateForm] = useState(false);\n    const dispatch = useDispatch();\n    const userData = useSelector((state) => state.userReducer);\n    const usersData = useSelector((state) => state.usersReducer);\n    const [followingPopup, setFollowingPopup] = useState(false);\n    const [followersPopup, setFollowersPopup] = useState(false);\n\n    const handleUpdateForm = () => {\n        setUpdateForm(!updateForm);\n    };\n\n    const handleUpdate = () => {\n        dispatch(updateBio(userData._id, bio));\n        setUpdateForm(false);\n    };\n\n    let date = \"12/12/2020\";\n\n    return (\n        <div className=\"profil-container\">\n            <LeftNav/>\n            <h1> Profil de {userData.pseudo}</h1>\n            <div className=\"update-container\">\n                <div className=\"left-part\">\n                    <h3>Photo de profil</h3>\n                    <img src={userData.picture} alt=\"user profile picture\"/>\n                    <UploadImg/>\n                </div>\n                <div className=\"right-part\">\n                    <div className=\"bio-update\">\n                        <h3>Bio</h3>\n                        {updateForm === false && (\n                            <React.Fragment>\n                                <p onClick={handleUpdateForm}>{userData.bio}</p>\n                                <button onClick={handleUpdateForm}>Modifier la bio</button>\n                            </React.Fragment>\n                        )}\n\n                        {updateForm === true && (\n                            <React.Fragment>\n                <textarea\n                    type=\"text\"\n                    defaultValue={userData.bio}\n                    onChange={(e) => {\n                        setBio(e.target.value);\n                    }}\n                />\n                                <button onClick={handleUpdate}>\n                                    Valider les modifications\n                                </button>\n                            </React.Fragment>\n                        )}\n                    </div>\n                    <h4>Membre depuis {dateParser(userData.createdAt)}</h4>\n                    <h5 onClick={(e) => setFollowingPopup(true)}>\n                        Abonnements: {userData.following ? userData.following.length : \"\"}\n                    </h5>\n                    <h5 onClick={(e) => setFollowersPopup(true)}>\n                        Abonnés: {userData.followers ? userData.followers.length : \"\"}\n                    </h5>\n                </div>\n            </div>\n            {followingPopup && (\n                <div className=\"popup-profil-container\">\n                    <div className=\"modal\">\n                        <h3>Abonnements</h3>\n                        <span onClick={(e) => setFollowingPopup(false)} className=\"cross\">\n              &#10005;\n            </span>\n                        <ul>\n                            {usersData.map((user) => {\n                                for (let i = 0; i < userData.following.length; i++) {\n                                    if (user._id === userData.following[i])\n                                        return (\n                                            <li key={user._id}>\n                                                <img src={user.picture} alt=\"user-pic\"/>\n                                                <h4>{user.pseudo}</h4>\n                                                <div className=\"follow-handler\">\n                                                    <FollowHandler idToFollow={user._id} type=\"suggestion\"/>\n                                                </div>\n                                            </li>\n                                        );\n                                }\n                                return null;\n                            })}\n                        </ul>\n                    </div>\n                </div>\n            )}\n\n            {followersPopup && (\n                <div className=\"popup-profil-container\">\n                    <div className=\"modal\">\n                        <h3>Abonnés</h3>\n                        <span onClick={(e) => setFollowersPopup(false)} className=\"cross\">\n              &#10005;\n            </span>\n                        <ul>\n                            {usersData.map((user) => {\n                                for (let i = 0; i < userData.followers.length; i++) {\n                                    if (user._id === userData.followers[i])\n                                        return (\n                                            <li key={user._id}>\n                                                <img src={user.picture} alt=\"user-pic\"/>\n                                                <h4>{user.pseudo}</h4>\n                                                <div className=\"follow-handler\">\n                                                    <FollowHandler idToFollow={user._id} type=\"suggestion\"/>\n                                                </div>\n                                            </li>\n                                        );\n                                }\n                                return null;\n                            })}\n                        </ul>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default UpdateProfil;\n","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Log/index.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Utils.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Profil/FollowHandler.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Post/Card.js",["129","130"],"import React, {useState, useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {dateParser, isEmpty} from \"../Utils\";\nimport FollowHandler from \"../Profil/FollowHandler\";\nimport LikeButton from \"./LikeButton\";\nimport {updatePost} from \"../../actions/post.actions\";\nimport DeletePost from \"./DeletePost\";\nimport PostComments from \"./PostComments\";\n\nconst Card = ({post}) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [isUpdated, setIsUpdated] = useState(false);\n    const [textUpdate, setTextUpdate] = useState(null);\n    const [showComments, setShowComments] = useState(false);\n    const usersData = useSelector((state => state.usersReducer));\n    const userData = useSelector((state => state.userReducer));\n    const dispatch = useDispatch();\n\n\n    const updateItem = () => {\n        if (textUpdate) {\n            dispatch(updatePost(post._id, textUpdate));\n        }\n        setIsUpdated(false);\n    };\n\n    useEffect(() => {\n        !isEmpty(usersData[0]) && setIsLoading(false);\n    }, [usersData])\n\n\n    return (\n        <li className=\"card-container\" key={post._id}>\n            {isLoading ? (\n                <i className=\"fas fa-spinner fa-spin\">\n\n                </i>\n            ) : (\n                <React.Fragment>\n                    <div className=\"card-left\"><img src={!isEmpty(usersData[0]) &&\n                    usersData.map((user) => {\n                        if (user._id === post.posterId)\n                            return user.picture\n                        else return null;\n                    }).join(\"\")\n                    } alt=\"poster picture\"/>\n                    </div>\n                    <div className=\"card-right\">\n                        <div className=\"card-header\">\n                            <div className=\"pseudo\">\n                                <h3>{!isEmpty(usersData[0]) &&\n                                usersData.map((user) => {\n                                    if (user._id === post.posterId)\n                                        return user.pseudo\n                                    else return null;\n                                })}</h3>\n                                {post.posterId !== userData._id && (\n                                    <FollowHandler idToFollow={post.posterId} type=\"card\"/>\n                                )}\n                            </div>\n                            <span>{dateParser(post.createdAt)}</span>\n                        </div>\n                        {isUpdated === false && <p>{post.message}</p>}\n                        {isUpdated === true && (\n                            <div className=\"updated-post\">\n                                <textarea\n                                    defaultValue={post.message}\n                                    onChange={(e) => setTextUpdate(e.target.value)}\n                                />\n                                <div className=\"button-container\">\n                                    <button className=\"btn\" onClick={updateItem}>\n                                        Vailder modification\n                                    </button>\n                                </div>\n                            </div>\n                        )}\n                        {post.picture && (<img src={post.picture} alt=\"picture\" className=\"card-pic\"/>)}\n                        {post.video && (\n                            <iframe\n                                width=\"500\"\n                                height=\"300\"\n                                src={post.video}\n                                frameBorder=\"0\"\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                allowFullScreen\n                                title={post._id}\n                            />\n                        )}\n                        {userData._id === post.posterId && (\n                            <div className=\"button-container\">\n                                <div onClick={() => setIsUpdated(!isUpdated)}>\n                                    <img src=\"./img/icons/edit.svg\" alt=\"edit\"/>\n                                </div>\n                                <DeletePost id={post._id}/>\n                            </div>\n                        )}\n                        <div className=\"card-footer\">\n                            <div className=\"comment-icon\">\n                                <img onCick={setShowComments(!showComments)}\n                                     src=\"./img/icons/message1.svg\" alt=\"comment\"/>\n                                <span>{post.comments.length}</span>\n                            </div>\n                            <LikeButton post={post}/>\n                            <img src=\"./img/icons/share.svg\" alt=\"share\"/>\n                        </div>\n                        {showComments && <PostComments post={post}/>}\n                    </div>\n                </React.Fragment>\n            )}\n        </li>\n    );\n};\n\nexport default Card;","/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Log/SignUpForm.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Log/SignInForm.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Post/DeletePost.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Post/PostComments.js",[],"/Users/salimtison/Documents/Developpement/git/GitHub/Perso/MERN-social-media/client/src/components/Post/LikeButton.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":2,"column":9,"nodeType":"137","messageId":"138","endLine":2,"endColumn":15},{"ruleId":"135","severity":1,"message":"139","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":17},{"ruleId":"135","severity":1,"message":"140","line":27,"column":9,"nodeType":"137","messageId":"138","endLine":27,"endColumn":13},{"ruleId":"141","severity":1,"message":"142","line":36,"column":21,"nodeType":"143","endLine":36,"endColumn":77},{"ruleId":"141","severity":1,"message":"142","line":40,"column":48,"nodeType":"143","endLine":46,"endColumn":45},{"ruleId":"141","severity":1,"message":"142","line":77,"column":43,"nodeType":"143","endLine":77,"endColumn":103},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'logger' is defined but never used.","Identifier","unusedVar","'UploadImg' is defined but never used.","'date' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]